/* Header file to encode which DMG registers are read and write only, by defining bitmasks
  Author: Max Croucher
  Email: mpccroucher@gmail.com
  May 2025
*/

#ifndef REGISTERS_H
#define REGISTERS_H


uint8_t write_masks[256] = { // for each byte, a '1' means a bit is writable
    0b00110000, // JOYP
    0b11111111, // SB
    0b10000001, // SC
    0b11111111,
    0b11111111, // DIV
    0b11111111, // TIMA
    0b11111111, // TMA
    0b00000111, // TAC
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b00011111, // IF
    0b01111111, // NR10
    0b11111111, // NR11
    0b11111111, // NR12
    0b11111111, // NR13
    0b11000111, // NR14
    0b11111111,
    0b11111111, // NR21
    0b11111111, // NR22
    0b11111111, // NR23
    0b11000111, // NR24
    0b10000000, // NR30
    0b11111111, // NR31
    0b01100000, // NR32
    0b11111111, // NR33
    0b11000111, // NR34
    0b11111111,
    0b11111111, // NR41
    0b11111111, // NR42
    0b11111111, // NR43
    0b11000000, // NR44
    0b11111111, // NR50
    0b11111111, // NR51
    0b10000000, // NR52
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111, // WAVE1
    0b11111111, // WAVE2
    0b11111111, // WAVE3
    0b11111111, // WAVE4
    0b11111111, // WAVE5
    0b11111111, // WAVE6
    0b11111111, // WAVE7
    0b11111111, // WAVE8
    0b11111111, // WAVE9
    0b11111111, // WAVE10
    0b11111111, // WAVE11
    0b11111111, // WAVE12
    0b11111111, // WAVE13
    0b11111111, // WAVE14
    0b11111111, // WAVE15
    0b11111111, // WAVE16
    0b11111111, // LCDC
    0b01111000, // STAT
    0b11111111, // SCY
    0b11111111, // SCX
    0b00000000, // LY
    0b11111111, // LYC
    0b11111111, // DMA
    0b11111111, // BGP
    0b11111111, // OBP0
    0b11111111, // OBP1
    0b11111111, // WX
    0b11111111, // WY
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b11111111,
    0b00011111 // IE
};

uint8_t read_masks[256] = { // for each byte, a '0' means a bit is readable
    0b11000000, // JOYP
    0b00000000, // SB
    0b01111110, // SC
    0b00000000,
    0b00000000, // DIV
    0b00000000, // TIMA
    0b00000000, // TMA
    0b11111000, // TAC
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b11100000, // IF
    0b10000000, // NR10
    0b00111111, // NR11
    0b00000000, // NR12
    0b11111111, // NR13
    0b10111111, // NR14
    0b00000000,
    0b00111111, // NR21
    0b00000000, // NR22
    0b11111111, // NR23
    0b10111111, // NR24
    0b01111111, // NR30
    0b11111111, // NR31
    0b10011111, // NR32
    0b11111111, // NR33
    0b10111111, // NR34
    0b00000000,
    0b11111111, // NR41
    0b00000000, // NR42
    0b00000000, // NR43
    0b10111111, // NR44
    0b00000000, // NR50
    0b00000000, // NR51
    0b01110000, // NR52
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000, // WAVE1
    0b00000000, // WAVE2
    0b00000000, // WAVE3
    0b00000000, // WAVE4
    0b00000000, // WAVE5
    0b00000000, // WAVE6
    0b00000000, // WAVE7
    0b00000000, // WAVE8
    0b00000000, // WAVE9
    0b00000000, // WAVE10
    0b00000000, // WAVE11
    0b00000000, // WAVE12
    0b00000000, // WAVE13
    0b00000000, // WAVE14
    0b00000000, // WAVE15
    0b00000000, // WAVE16
    0b00000000, // LCDC
    0b10000000, // STAT
    0b00000000, // SCY
    0b00000000, // SCX
    0b00000000, // LY
    0b00000000, // LYC
    0b00000000, // DMA
    0b00000000, // BGP
    0b00000000, // OBP0
    0b00000000, // OBP1
    0b00000000, // WX
    0b00000000, // WY
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b11100000 // IE
};
#endif //REGISTERS
