HEADER = [0x00]*256 + [
    0x00, #NOP
    0b11000011, # JP
    0x00,
    0x15,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, # Boot Logo
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    ord("N"),ord("O"),ord("P"),ord("R"),ord("O"),ord("M"),0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, # Title
    0x00, # CGB
    0x00,0x00, # New Licensee
    0x00, # Cart type
    0x00, # ROM size
    0x00, # RAM size
    0x01, # Destination
    0x00, # Old Licensee
    0x00, # Version
    0x00, # Header Checksum
    0x00, 0x00 # Body Checksum
]

# Body starts at address 0x0150, where the program counter sits
BODY = []

OUTPUT_FILENAME = "nops.gb"

def main():
    chk = 0
    for i in range(0x0134, 0x014c+1):
        chk -= HEADER[i] + 1
    HEADER[0x014D] = chk%256
    print("Checksum set to", hex(chk%256))
    cart_size = 2**(HEADER[0x0148]+15)

    cart_padding = cart_size - len(HEADER) - len(BODY)
    if cart_padding < 0:
        raise ValueError("cart size is too small")

    with open(OUTPUT_FILENAME, 'wb') as outfile:
        outfile.write(bytes(HEADER))
        outfile.write(bytes(BODY))
        outfile.write(bytes([0x00]*cart_padding))

    print(f"Written to {OUTPUT_FILENAME}")

if __name__ == "__main__":
    main()